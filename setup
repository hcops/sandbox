#!/bin/bash

# Exit on error
set -e

# store the traget platform in a variable
PLTFRM=$1

# Function to strip surrounding quotes from a string
strip_quotes() {
  echo "$1" | sed -e 's/^"//' -e 's/"$//' -e "s/^'//" -e "s/'$//"
}

# Function to output the used credentials
output_credentials() {
  echo -e "Home manager is now active, using the following configuration:\nLinux user: ${USER}\nGitHub user: ${NME}\nGitHub eMail: ${EML}"
}

# Function to configure the nix environment
config_nix() {
  # activating experimental features
  echo "experimental-features = nix-command flakes\ntrusted-users = root ${USER}" | sudo tee -a /etc/nix/nix.conf
  
  # add the home-manager package channel
  nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
  
  # updte the home manager channel
  nix-channel --update
} 

# Function to set the user information in the nix config files
user_settings() {
  sdb_dir = "${HOME/workspace"
  sed -i "s/_USRNAME_/${USER}/g" $sdb_dir/home.nix 
  sed -i "s/_GHBNAME_/${NME}/g" $sdb_dir/home.nix
  sed -i "s/_GHBMAIL_/${EML}/g" $sdb_dir/home.nix 
  sed -i "s/_SYSTEM_/${PLTFRM}/g" $sdb_dir/flake.nix
}

# Function to install home-manager
install_home_manager() {
  # create the first home-manager generation
  nix-shell '<home-manager>' -A install

  # add the nix path to `.bashrc`
  echo '. "$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh"' >> $HOME/.profile
}


# clone the default home-manager configuration
nix-shell -p gh --run "gh auth login -h github.com -s user && \
        gh api user > ${HOME}/ghacc.json && \
        gh api user/emails > ${HOME}/ghml.json && \
        gh repo clone hcops/workspace"

# retrieve and cache user identifier
NME=$(nix-shell -p jq --run "jq -r '.login' ${HOME}/ghacc.json")
EML=$(nix-shell -p jq --run "jq '.[] | select(.primary == true) | .email' ${HOME}/ghml.json")
EML=$(strip_quotes $EML)

config_nix
install_home_manager
user_settings

# cd $HOME/workspace/ && git add . && git commit -m "update configuration files"
cd $HOME/sandbox/ && home-manager switch -b backup --flake .#$USER

# Check if the file exists
HOME_PATH="${HOME}/.config/home-manager/home.nix"
if [ -f "$HOME_PATH" ]; then
  echo "File '$HOME_PATH' exists, replacing..."
  rm "$HOME_PATH"
else
  echo "${HOME_PATH} does not exist, creating ..."
fi

FLAKE_PATH="${HOME}/.config/home-manager/flake.nix"
if [ -f "$FLAKE_PATH" ]; then
  echo "File '$FLAKE_PATH' exists, replacing..."
  rm "$FLAKE_PATH"
else
  echo "${FLAKE_PATH} does not exist, creating ..."
fi

for file in home.nix flake.nix; do ln -s "${HOME}/sandbox/$file" "${HOME}/.config/home-manager/$file"; done

# clean configration files
for json in ghacc.json ghml.json; do rm "${HOME}/$json"; done

# activate direnv
echo 'eval "$(direnv hook bash)"' >> $HOME/.bashrc
# change to the following lines when the the use of nix-direnv is intended, and the original .bashrc will be replaced with a symbolic link
# echo 'eval "$(direnv hook bash)"' | sudo tee -a $(readlink "$HOME/.bashrc")


# restart nix daemon and return the used credentials
sudo systemctl restart nix-daemon
output_credentials
